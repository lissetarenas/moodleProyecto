import com.itextpdf.text.DocumentException;
import java.awt.Color;
import java.awt.Desktop;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;


import java.awt.Image;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import javax.swing.text.Document;
import org.apache.pdfbox.pdmodel.PDPageContentStream;
import org.apache.pdfbox.pdmodel.common.PDRectangle;
import org.apache.pdfbox.pdmodel.font.PDType1Font;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author porta
 */
public class Ventana extends javax.swing.JFrame {
     private static Connection con= null;
     Statement stmnt = null;
     private static String driver="org.postgresql.Driver";
     private static String pwd="1234";
     private static String usuario="postgres";
     private static String url="jdbc:postgresql://localhost:5432/postgres";
     String  name, date, hour;
     int fila, colum;
     int opc, materia;
     String tabla, nombre;
     int id;
     String numero, id_tabla;
     
     FileNameExtensionFilter filtro= new FileNameExtensionFilter( "PDF, WORD" ,"pdf", "docx");
     
    

    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();
        this.getContentPane().setBackground(Color.GRAY);
      
       
       
         this.jComboBox1.removeAllItems();
         this.jComboTabla.removeAllItems();
         cargarTabla();
         btnEditar.setVisible(true);
         ImageIcon imagen= new ImageIcon ("imagenes/usuario.png");
         Icon icono= new ImageIcon(imagen.getImage().getScaledInstance(jLabelImagen.getWidth(), jLabelImagen.getHeight(), Image.SCALE_DEFAULT));
         jLabelImagen.setIcon(icono);
      }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboTabla = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        btnSubir = new javax.swing.JButton();
        btnCrear = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jLabelImagen = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ventana Principal"); // NOI18N
        setBackground(java.awt.SystemColor.activeCaptionText);

        jLabel1.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        jLabel1.setText("Nombre:");

        jLabel2.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        jLabel2.setText("Materia: ");

        jComboBox1.setFont(new java.awt.Font("Verdana", 0, 10)); // NOI18N
        jComboBox1.setToolTipText("");
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel3.setText("Julian Perez ");

        jLabel4.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        jLabel4.setText("Tabla: ");

        jComboTabla.setFont(new java.awt.Font("Verdana", 0, 10)); // NOI18N
        jComboTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboTablaActionPerformed(evt);
            }
        });

        jTable.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable.setFont(new java.awt.Font("Verdana", 0, 10)); // NOI18N
        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable);

        jButton1.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jButton1.setText("Consultar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnSubir.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        btnSubir.setText("Subir");
        btnSubir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubirActionPerformed(evt);
            }
        });

        btnCrear.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        btnCrear.setText("Crear");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });

        btnEditar.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jButton2.setText("Crear Examen");

        btnEliminar.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        jLabelImagen.setText("jLabel5");
        jLabelImagen.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4))
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabelImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(jComboTabla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnCrear, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(btnEliminar)
                        .addGap(54, 54, 54)
                        .addComponent(jButton2)))
                .addGap(21, 21, 21))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(btnSubir, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 582, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 59, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(292, 292, 292))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addComponent(jButton1)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboTabla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubir)
                    .addComponent(btnCrear)
                    .addComponent(btnEditar)
                    .addComponent(btnEliminar)
                    .addComponent(jButton2))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        
      
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboTablaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboTablaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       String id=null, fk=null;
       materia=(int) jComboBox1.getSelectedIndex();
       
       if (materia==0){
         fk= "3299";
       }else if (materia==1){
           fk="3300";
       }else{
           fk=null;
       }
            tabla = (String) jComboTabla.getSelectedItem();
      
       
      
               consultar(tabla, "id", fk);
              
               
// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
       
            crearPDF aux= new crearPDF();
            aux.setVisible(true);
            aux.datos(asignarID(), (String)jComboTabla.getSelectedItem());
                        
        
        
    }//GEN-LAST:event_btnCrearActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
       fila=0;
        
        if( jComboTabla.getSelectedIndex() !=1 ){
            btnEditar.invalidate();
        }else{
            if (jTable.getSelectedRow() >=0 ){
                EditarTarea aux = new EditarTarea();
                aux.setVisible(true);
                fila = jTable.getSelectedRow();
                name = (String) jTable.getValueAt(fila, 3);
                date = (String) jTable.getValueAt(fila, 4);
                hour =  (String) jTable.getValueAt(fila, 5);
                
            
                asignarTabla();
                aux.editarDatos(name, date, hour, tabla, id_tabla, numero);
            }else{
                JOptionPane.showMessageDialog(null, "Debes seleccionar una fila");
            }
        }
     
       
    }//GEN-LAST:event_btnEditarActionPerformed

    private void jTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMousePressed
     
    }//GEN-LAST:event_jTableMousePressed
   public void asignarTabla(){
        numero = (String)jTable.getValueAt(jTable.getSelectedRow(), 0);
        tabla = (String) jComboTabla.getSelectedItem();
         switch(tabla){
             case "documentos":
                 id_tabla= "id_documentos";
                 break;
             case "tareas":
                 id_tabla="id_tareas";
                 break;
         }
   }
   
    public int asignarID(){
        id= jComboBox1.getSelectedIndex();
        if(id==0){id = 3299; }else { id= 3300;}
      
        return id;
    }
    private void btnSubirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubirActionPerformed
        // TODO add your handling code here:
      
        if (jComboBox1.getSelectedIndex()  <= 0)
        {
           JOptionPane.showMessageDialog(rootPane,"No has seleccionado un curso");
        }else{        
            JFileChooser fcho= new JFileChooser();
            fcho.setFileFilter(filtro);
            int opc= fcho.showOpenDialog(this);
            if (opc == JFileChooser.APPROVE_OPTION){
                nombre= fcho.getSelectedFile().getName();
                //ruta = fcho.getSelectedFile().getPath();
                
                switch (tabla){
                    case "documentos":
                        insertar(nombre);
                          break;
                    case "tareas":
                       
                        Tarea aux = new Tarea();
                        aux.setVisible(true);
                        aux.guardar(nombre,asignarID() );
                        
                        break;
                        
                }
                
             }
        }
    }//GEN-LAST:event_btnSubirActionPerformed

    
    
    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
       
        
        try {
             
             Class.forName(driver);
             con = DriverManager.getConnection(url, usuario, pwd);
             stmnt = con.createStatement();
             asignarTabla();
           
             stmnt.execute("delete from "+ tabla+" where "+ id_tabla+" = '"+numero+"';");
             
             stmnt.close();
             con.close();
             
         } catch (ClassNotFoundException ex) {
             Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
         } catch (SQLException ex) {
             Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
         }
        
      
        
        
    }//GEN-LAST:event_btnEliminarActionPerformed
    
    public void insertar (  String nombre) {
      
     
      String sql=null;
      Date fecha = new Date();
      DateFormat hora= new SimpleDateFormat("hh:mm");
      DateFormat dF = new SimpleDateFormat("dd/MM/yyyy");
    try {
     
        //tsbla solo sera ip o so 
       
        Class.forName(driver);
        con = DriverManager.getConnection(url, usuario, pwd);
        stmnt = con.createStatement();
        
        stmnt.executeQuery("insert into documentos (id, nombre, fecha, hora)"
                + " values('"+this.asignarID()+ "','"+nombre+ "','"+ dF.format(fecha)+"', '" + hora.format(fecha)+"');");
        stmnt.close();    
        con.close();
       
     }  catch (ClassNotFoundException ex) {      
                Logger.getLogger(crearPDF.class.getName()).log(Level.SEVERE, null, ex);
     } catch (SQLException ex) {
                Logger.getLogger(crearPDF.class.getName()).log(Level.SEVERE, null, ex);
    }      
       

      
    
}    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }
    
    public void cargarTabla(){

      try{
          Class.forName(driver);
          con = DriverManager.getConnection(url, usuario, pwd);
          Statement sta= con.createStatement();
          ResultSet rs= sta.executeQuery("select * from materias");
          ResultSet tabla= sta.executeQuery("select * from tablas");
          while ( rs.next() && tabla.next()){
              this.jComboBox1.addItem(rs.getString("nombre"));
              this.jComboTabla.addItem(tabla.getString("nombre"));
          }
          rs.close();
          tabla.close();
          con.close();
      }catch (Exception e){
          JOptionPane.showMessageDialog(null, e);
      }
        
     
    }
    
    
    public void consultar(String tabla, String id, String fk){
        
       String sql;
       Connection con= null;
       DefaultTableModel modelo = new DefaultTableModel(){
         
           @Override
           public boolean isCellEditable(int row, int column) {
               if(column ==1){
                   return true;
               }else{
                   return false;
               }
           }
       };
       DefaultTableModel model_tareas = new DefaultTableModel(){
         
           @Override
           public boolean isCellEditable(int row, int column) {
               if(column ==1){
                   return true;
               }else{
                   return false;
               }
           }
       };
       modelo.addColumn("ID");
       modelo.addColumn("Nombre");
       modelo.addColumn("Fecha");
       modelo.addColumn("Hora");
       
       jTable.setModel(modelo);
       
         try {
            
            Class.forName(driver);
            con = DriverManager.getConnection(url, usuario, pwd);
            Statement sta= con.createStatement();
            sql= "Select *from "+tabla +" WHERE "+id+"="+fk+" order by fecha;";
            ResultSet rs= sta.executeQuery(sql);
            ResultSetMetaData rmd= rs.getMetaData();
            
            jTable.removeAll();
            System.out.print(tabla);
           
            String []documentos = new String[5];
            String [] tareas= new String [7];
           
            
             switch (tabla){
                 case "documentos":
                    while (rs.next()){
                    documentos[0]= rs.getString("id_documentos");    
                    documentos[1]= rs.getString("nombre");
                    documentos[2]=rs.getString("fecha");
                    documentos[3]= rs.getString("hora");
                    jTable.setRowSorter(new TableRowSorter(modelo));
                    modelo.addRow(documentos);
                }
                     break;
                 case "tareas":
                    model_tareas.addColumn("ID");
                    model_tareas.addColumn("Fecha");
                    model_tareas.addColumn("Hora");
                    model_tareas.addColumn("Nombre");
                    model_tareas.addColumn("Hora entrega");
                    model_tareas.addColumn("Fecha entrega");

                    jTable.setModel(model_tareas);
                    while (rs.next()){
                    tareas[0]= rs.getString("id_tareas");
                    tareas[1]= rs.getString("fecha");
                    tareas[2]= rs.getString("hora");         
                    tareas[3]= rs.getString("nombre");
                    tareas[4]= rs.getString("hora_entrega");
                    tareas[5]= rs.getString("fecha_entrega");
                     jTable.setRowSorter(new TableRowSorter(model_tareas));
                    model_tareas.addRow(tareas);
                 }
                     break;
                     
                     
             }
            
             rs.close();
             con.close();
         
         } catch (ClassNotFoundException ex) {
             Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
         } catch (SQLException ex) {
             Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
         }
        
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnSubir;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboTabla;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelImagen;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable;
    // End of variables declaration//GEN-END:variables

    
}
